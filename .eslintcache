[{"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\App.tsx":"1","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\index.tsx":"2","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Cardapio\\index.tsx":"3","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Product\\index.tsx":"4","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Category\\index.tsx":"5","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Orders\\index.tsx":"6","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Store\\index.ts":"7","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Store\\reducers\\index.ts":"8","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\index.tsx":"9","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\reportWebVitals.ts":"10","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\Info\\index.tsx":"11","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\Products\\index.tsx":"12","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Stats\\index.tsx":"13","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Theme\\index.ts":"14","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\404\\index.tsx":"15","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Onboarding\\index.tsx":"16","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Onboarding\\CreateLink\\index.tsx":"17","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Onboarding\\ChooseProducts\\index.tsx":"18","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Onboarding\\Finish\\index.tsx":"19","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Services\\Api\\index.ts":"20","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Services\\GraphqlRequest\\index.ts":"21","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Components\\Loading\\styles.ts":"22","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Components\\Loading\\index.tsx":"23"},{"size":1912,"mtime":1607375874209,"results":"24","hashOfConfig":"25"},{"size":1329,"mtime":1606796853469,"results":"26","hashOfConfig":"25"},{"size":1674,"mtime":1606764672833,"results":"27","hashOfConfig":"25"},{"size":1992,"mtime":1606711510788,"results":"28","hashOfConfig":"25"},{"size":1627,"mtime":1606742976869,"results":"29","hashOfConfig":"25"},{"size":5610,"mtime":1607114474007,"results":"30","hashOfConfig":"25"},{"size":280,"mtime":1606712775124,"results":"31","hashOfConfig":"25"},{"size":81,"mtime":1606712750254,"results":"32","hashOfConfig":"25"},{"size":3618,"mtime":1606854594026,"results":"33","hashOfConfig":"25"},{"size":425,"mtime":1606704247042,"results":"34","hashOfConfig":"25"},{"size":3398,"mtime":1606853388354,"results":"35","hashOfConfig":"25"},{"size":2191,"mtime":1606840176742,"results":"36","hashOfConfig":"25"},{"size":3471,"mtime":1606793261238,"results":"37","hashOfConfig":"25"},{"size":799,"mtime":1607375959664,"results":"38","hashOfConfig":"25"},{"size":1211,"mtime":1606761296454,"results":"39","hashOfConfig":"25"},{"size":1238,"mtime":1606869001966,"results":"40","hashOfConfig":"25"},{"size":4704,"mtime":1607435243617,"results":"41","hashOfConfig":"25"},{"size":2357,"mtime":1606872084243,"results":"42","hashOfConfig":"25"},{"size":1710,"mtime":1606872608806,"results":"43","hashOfConfig":"25"},{"size":720,"mtime":1607371527651,"results":"44","hashOfConfig":"25"},{"size":309,"mtime":1607372971118,"results":"45","hashOfConfig":"25"},{"size":462,"mtime":1607392934968,"results":"46","hashOfConfig":"25"},{"size":469,"mtime":1607388089051,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1qvyo9j",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\App.tsx",["107","108"],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\index.tsx",[],["109","110"],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Cardapio\\index.tsx",["111"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  List,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport { api } from \"Services/Api\";\r\nimport { Category } from \"Types/Category\";\r\n\r\n// import { Container } from './styles';\r\n\r\nconst Cardapio: React.FC = () => {\r\n  const history = useHistory();\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"menu/categories\")\r\n      .then(({ data }) => {\r\n        setCategories(data);\r\n      })\r\n      .catch((err) => alert(\"Erro ao buscar cardapio\"));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\">Card√°pio</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container maxWidth=\"sm\">\r\n        <List>\r\n          {categories.map((category) => (\r\n            <ListItem\r\n              divider\r\n              onClick={() =>\r\n                history.push(`/categoria?categoryId=${category._id}`)\r\n              }\r\n            >\r\n              <ListItemText primary={category.nameShow} />\r\n              <ListItemSecondaryAction>\r\n                <IconButton>\r\n                  <ChevronRightIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cardapio;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Product\\index.tsx",["112"],"import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Container,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { Row } from \"../../Theme\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import { Container } from './styles';\r\n\r\nconst ProductPage: React.FC = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            onClick={() => history.goBack()}\r\n            style={{ paddingLeft: \"0px\" }}\r\n            color=\"inherit\"\r\n          >\r\n            <ChevronLeftIcon style={{ fontSize: \"30px\" }} />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Pizza G</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container maxWidth=\"sm\">\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item xs={6}>\r\n            <img src=\"https://diariodorio.com/wp-content/uploads/2020/07/daleopizzaria_20200710_144435_0-1280x720.jpg\" />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Button size=\"small\" variant=\"contained\" color=\"primary\">\r\n              Trocar imagem\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Row>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Nome\"\r\n            variant=\"outlined\"\r\n            placeholder=\"digite aqui...\"\r\n          />\r\n        </Row>\r\n        <Row>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Detalhes\"\r\n            variant=\"outlined\"\r\n            placeholder=\"digite aqui...\"\r\n          />\r\n        </Row>\r\n        <Row>\r\n          <TextField label=\"Pre√ßo\" type=\"number\" variant=\"outlined\" />\r\n        </Row>\r\n        <Row>\r\n          <Button fullWidth variant=\"contained\" color=\"primary\">\r\n            Salvar\r\n          </Button>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Category\\index.tsx",[],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Orders\\index.tsx",["113","114","115","116","117","118","119","120","121"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { format, differenceInSeconds } from \"date-fns\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useInterval from \"@use-it/interval\";\r\nimport {\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Container,\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n} from \"@material-ui/core\";\r\nimport SearchBar from \"react-js-search\";\r\nimport SearchField from \"react-search-field\";\r\nimport { Gestures } from \"react-gesture-handler\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\nimport { api } from \"Services/Api\";\r\nimport { Order } from \"Types/Order\";\r\nimport { AppContent, Row } from \"Theme\";\r\nimport { setInterval } from \"timers\";\r\n\r\n// import { Container } from './styles';\r\n\r\nenum filterType {\r\n  new = 0,\r\n  confirmed = 1,\r\n}\r\n\r\nconst OrdersPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [orders, setOrders] = useState<Order[]>([]);\r\n  const [criteria, setCriteria] = useState<number>(filterType.new);\r\n  const [filterText, setFilterText] = useState<string>(\"\");\r\n\r\n  const byStatus = (criteria: any) => (order: Order) => {\r\n    switch (criteria) {\r\n      case filterType.new:\r\n        return order.events[order.events.length - 1].event === \"created\";\r\n\r\n      case filterType.confirmed:\r\n        return order.events[order.events.length - 1].event !== \"created\";\r\n\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n\r\n  const handleGesture = (event: HammerInput) => {\r\n    if (event.type === \"swiperight\") {\r\n      setCriteria(filterType.new);\r\n    } else {\r\n      setCriteria(filterType.confirmed);\r\n    }\r\n  };\r\n\r\n  const onSearchChange = (event: string) => {\r\n    setFilterText(event);\r\n  };\r\n\r\n  const byName = (textToFilter: string) => (order: Order) => {\r\n    return (\r\n      order.identify.name.toLowerCase().search(textToFilter.toLowerCase()) !==\r\n      -1\r\n    );\r\n  };\r\n\r\n  const getOrders = async (): Promise<Order[]> => {\r\n    const today = new Date();\r\n    const { data } = await api.get(\r\n      `portal/orders?date=${format(today, \"yyyy-MM-dd\")}`\r\n    );\r\n    return data;\r\n  };\r\n\r\n  const playAlert = () => {\r\n    let src =\r\n      \"//s3.amazonaws.com/appforest_uf/f1598429253106x343351561325749800/apple_msg_tone.mp3\";\r\n\r\n    for (let x = 1; x <= 10; x++) {\r\n      setTimeout(() => {\r\n        let audio = new Audio(src);\r\n        audio.play();\r\n      }, 100 * x);\r\n    }\r\n  };\r\n\r\n  useInterval(() => {\r\n    getOrders()\r\n      .then((fetchedOrders) => {\r\n        if (fetchedOrders.length > orders.length) {\r\n          playAlert();\r\n        }\r\n        setOrders(fetchedOrders);\r\n      })\r\n      .catch((err) => alert(\"Erro ao buscar Pedidos\"));\r\n  }, 30000);\r\n\r\n  useEffect(() => {\r\n    getOrders()\r\n      .then((orders) => setOrders(orders))\r\n      .catch((err) => alert(\"Erro ao buscar Pedidos\"));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            style={{ paddingLeft: \"0px\" }}\r\n            onClick={() => (window.location.href = window.location.origin)}\r\n          >\r\n            <HomeIcon />\r\n          </IconButton>\r\n          <Typography slot=\"start\" variant=\"h6\">\r\n            Pedidos\r\n          </Typography>\r\n          <IconButton\r\n            onClick={() => history.push(\"/relatorio\")}\r\n            color=\"inherit\"\r\n          >\r\n            <BarChartIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <AppContent bottomPadding={true}>\r\n        <SearchField\r\n          onChange={onSearchChange}\r\n          placeholder={\"Pesquise por cliente...\"}\r\n        />\r\n        <List>\r\n          {orders\r\n            .filter(byStatus(criteria))\r\n            .filter(byName(filterText))\r\n            .sort((a, b) =>\r\n              differenceInSeconds(new Date(b.createdAt), new Date(a.createdAt))\r\n            )\r\n            .map((order) => (\r\n              <ListItem\r\n                key={order._id}\r\n                onClick={() => history.push(`/pedido?id=${order._id}`)}\r\n                divider\r\n              >\r\n                <ListItemText\r\n                  primary={order.identify.name}\r\n                  secondary={order.address?.number ? \"Entrega\" : \"Retirada\"}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    onClick={() => history.push(`/pedido?id=${order._id}`)}\r\n                  >\r\n                    <ChevronRightIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n        </List>\r\n        {criteria === filterType.new &&\r\n          orders.filter(byStatus(criteria)).length === 0 && (\r\n            <Row horizontalCenter>Aguardando novos pedidos...</Row>\r\n          )}\r\n      </AppContent>\r\n      <AppBar position=\"fixed\" style={{ top: \"auto\", bottom: 0 }}>\r\n        <BottomNavigation\r\n          showLabels\r\n          value={criteria}\r\n          onChange={(event, newValue) => setCriteria(newValue)}\r\n        >\r\n          <BottomNavigationAction label=\"Novos\" />\r\n          <BottomNavigationAction label=\"Confirmados\" />\r\n        </BottomNavigation>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrdersPage;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Store\\index.ts",[],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Store\\reducers\\index.ts",[],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\index.tsx",["122","123","124","125","126","127","128","129","130","131","132","133","134"],"import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport {\r\n  useHistory,\r\n  useRouteMatch,\r\n  useParams,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n} from \"@material-ui/core\";\r\nimport { Gestures } from \"react-gesture-handler\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport ShoppingBasketOutlinedIcon from \"@material-ui/icons/ShoppingBasketOutlined\";\r\nimport useQueryString from \"use-query-string\";\r\n\r\nimport InfoView from \"./Info\";\r\nimport ProductsView from \"./Products\";\r\nimport { AppContent } from \"Theme\";\r\nimport { api } from \"Services/Api\";\r\nimport { Order } from \"Types/Order\";\r\nimport { Tab } from \"@material-ui/icons\";\r\nimport { queryAllByTestId } from \"@testing-library/react\";\r\n// import { Container } from './styles';\r\n\r\nfunction updateHistory(path: any) {\r\n  window.history.pushState(null, document.title, path);\r\n}\r\n\r\nconst OrderPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const { url, path, isExact, params } = useRouteMatch();\r\n  const dispatch = useDispatch();\r\n  const {} = useParams();\r\n  const { search, pathname } = useLocation();\r\n  const [query, setQuery] = useQueryString(window.location, updateHistory, {\r\n    parseBooleans: true,\r\n  });\r\n\r\n  const tab = Number(query.tab || 1);\r\n\r\n  const id = query.id;\r\n\r\n  const [order, setOrder] = useState<Order | null>(null);\r\n\r\n  const handleGesture = (event: HammerInput) => {\r\n    if (event.type === \"swiperight\") {\r\n      setQuery({\r\n        tab: \"1\",\r\n      });\r\n    } else {\r\n      setQuery({\r\n        tab: \"2\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"orders/\" + id)\r\n      .then(({ data }) => {\r\n        setOrder(data);\r\n      })\r\n      .catch((err) => alert(err));\r\n  }, [id]);\r\n\r\n  return (\r\n    <Gestures\r\n      recognizers={{\r\n        Swipe: {\r\n          events: {\r\n            swiperight: (event) => handleGesture(event),\r\n            swipeleft: (event) => handleGesture(event),\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            style={{ paddingLeft: \"0px\" }}\r\n            onClick={() => history.replace(\"/pedidos\")}\r\n          >\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Detalhes do Pedido</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppContent bottomPadding>\r\n        {!order && <div>buscando...</div>}\r\n        {order && tab === 1 && <InfoView data={order} />}\r\n        {order && tab === 2 && <ProductsView data={order} />}\r\n      </AppContent>\r\n      <AppBar position=\"fixed\" style={{ top: \"auto\", bottom: 0 }}>\r\n        <BottomNavigation\r\n          showLabels\r\n          value={tab - 1}\r\n          onChange={(event, newValue) => {\r\n            if (newValue === 0) {\r\n              setQuery({\r\n                tab: \"1\",\r\n              });\r\n            } else {\r\n              setQuery({\r\n                tab: \"2\",\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          <BottomNavigationAction\r\n            label=\"Informa√ß√µes\"\r\n            icon={<InfoOutlinedIcon />}\r\n          />\r\n          <BottomNavigationAction\r\n            label=\"Produtos\"\r\n            icon={<ShoppingBasketOutlinedIcon />}\r\n          />\r\n        </BottomNavigation>\r\n      </AppBar>\r\n    </Gestures>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\reportWebVitals.ts",[],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\Info\\index.tsx",["135","136","137","138","139","140","141","142","143","144","145"],"import React, { useState, useEffect } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport {\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, View } from \"Theme\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { Order } from \"Types/Order\";\r\nimport { api } from \"Services/Api\";\r\n\r\n// import { Container } from './styles';\r\n\r\ntype InfoViewType = {\r\n  data: Order;\r\n};\r\n\r\nconst InfoView: React.FC<InfoViewType> = ({ data }) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { url, path, isExact, params } = useRouteMatch();\r\n  const {} = useParams();\r\n  const { search } = useLocation();\r\n\r\n  const isConfirmed = data.events.some((event) => event.event === \"printed\");\r\n\r\n  function handleConfirm() {\r\n    api\r\n      .post(`orders/${data._id}/events`, { name: \"printed\" })\r\n      .then(() => {\r\n        history.push(\"/pedidos\");\r\n      })\r\n      .catch((err) => alert(\"N√£o foi poss√≠vel confirmar. Tente novamente\"));\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <Row>Pedido recebido √†s {format(new Date(data.createdAt), \"hh:mm\")}</Row>\r\n      <Divider />\r\n      <Grid container spacing={3} alignItems=\"center\">\r\n        <Grid item xs={6}>\r\n          <ListItemText primary={data.identify.name} secondary=\"Nome\" />\r\n        </Grid>\r\n        <Grid container xs={6} justify=\"center\">\r\n          {!isConfirmed && (\r\n            <Button onClick={handleConfirm} variant=\"contained\" color=\"primary\">\r\n              Confirmar\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <Divider />\r\n      <List>\r\n        <ListItemText primary={data.identify.phone} secondary=\"Telefone\" />\r\n        {data.address?.number && (\r\n          <ListItemText\r\n            primary={`${data.address?.publicPlace} ${data.address?.number} ${data.address?.neighborhood}`}\r\n            secondary=\"Endere√ßo\"\r\n          />\r\n        )}\r\n      </List>\r\n      <Divider />\r\n      <Row>\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item xs={6}>\r\n            Total de Produtos\r\n          </Grid>\r\n          <Grid container xs={6} justify=\"flex-end\">\r\n            {data.totalProducts.toLocaleString(\"pt-BR\", {\r\n              style: \"currency\",\r\n              currency: \"BRL\",\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      </Row>\r\n      {data.address?.number && (\r\n        <Row>\r\n          <Grid container alignItems=\"center\">\r\n            <Grid item xs={6}>\r\n              Taxa de entrega\r\n            </Grid>\r\n            <Grid container xs={6} justify=\"flex-end\">\r\n              {data.deliveryFee?.toLocaleString(\"pt-BR\", {\r\n                style: \"currency\",\r\n                currency: \"BRL\",\r\n              })}\r\n            </Grid>\r\n          </Grid>\r\n        </Row>\r\n      )}\r\n      <Row>\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item xs={6}>\r\n            Total\r\n          </Grid>\r\n          <Grid container xs={6} justify=\"flex-end\">\r\n            {data.total.toLocaleString(\"pt-BR\", {\r\n              style: \"currency\",\r\n              currency: \"BRL\",\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      </Row>\r\n      {data.note && <Row>Observa√ß√£o do pedido: {data.note}</Row>}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default InfoView;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\Products\\index.tsx",["146","147","148","149","150","151","152","153","154"],"import React, { Fragment } from \"react\";\r\nimport {\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { View } from \"Theme\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { Order } from \"Types/Order\";\r\n\r\n// import { Container } from './styles';\r\n\r\ntype ProductViewType = {\r\n  data: Order;\r\n};\r\n\r\nconst ProductsView: React.FC<ProductViewType> = ({ data }) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { url, path, isExact, params } = useRouteMatch();\r\n  const {} = useParams();\r\n  const { search } = useLocation();\r\n  const searchParamValue = new URLSearchParams(search).get(\"searchParamName\");\r\n\r\n  return (\r\n    <View>\r\n      <List>\r\n        {data.itens.map((item) => (\r\n          <ListItem divider>\r\n            <ListItemText\r\n              primary={`${item.qtd}x ${\r\n                item.productDescription\r\n              } - ${item.price.toLocaleString(\"pt-BR\", {\r\n                style: \"currency\",\r\n                currency: \"BRL\",\r\n              })}`}\r\n              secondary={\r\n                <ul>\r\n                  {item.groups.map((group) =>\r\n                    group.map((group, idx) => {\r\n                      if (idx === 0) {\r\n                        return (\r\n                          <Fragment>\r\n                            <b style={{ marginLeft: \"-20px\" }}>\r\n                              {group.group}:\r\n                            </b>\r\n                            <li>{group.printDescription.trim()}</li>\r\n                          </Fragment>\r\n                        );\r\n                      } else {\r\n                        return <li>{group.printDescription}</li>;\r\n                      }\r\n                    })\r\n                  )}\r\n                  {item.note && (\r\n                    <b style={{ marginLeft: \"-20px\" }}>\r\n                      Observa√ß√£o: {item.note}\r\n                    </b>\r\n                  )}\r\n                </ul>\r\n              }\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ProductsView;\r\n",["155","156"],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Stats\\index.tsx",["157","158","159","160","161","162","163","164","165","166"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { format } from \"date-fns\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport ptBrLocale from \"date-fns/locale/pt-BR\";\r\n\r\nimport { AppContent, Row } from \"Theme\";\r\nimport { api } from \"Services/Api\";\r\nimport { Order } from \"Types/Order\";\r\n\r\n// import { Container } from './styles';\r\n\r\nconst StatsPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { url, path, isExact, params } = useRouteMatch();\r\n  const {} = useParams();\r\n  const { search } = useLocation();\r\n  const searchParamValue = new URLSearchParams(search).get(\"searchParamName\");\r\n\r\n  const [selectedDate, handleDateChange] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const [orders, setOrders] = useState<Order[]>([]);\r\n\r\n  useEffect(() => {\r\n    const date = selectedDate || new Date();\r\n    api\r\n      .get(`portal/orders?date=${format(date, \"yyyy-MM-dd\")}`)\r\n      .then(({ data }) => {\r\n        setOrders(data);\r\n      })\r\n      .catch((err) => alert(\"Erro ao buscar cardapio\"));\r\n  }, [selectedDate]);\r\n\r\n  const count = orders.length;\r\n  const total = orders.reduce((acum, order) => acum + order.total, 0);\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            style={{ paddingLeft: \"0px\" }}\r\n            onClick={() => history.goBack()}\r\n          >\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Relat√≥rio</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppContent>\r\n        <Row horizontalCenter>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ptBrLocale}>\r\n            <DatePicker\r\n              disableFuture\r\n              openTo=\"date\"\r\n              format=\"dd/MM/yyyy\"\r\n              label=\"Escolha o dia\"\r\n              views={[\"month\", \"date\"]}\r\n              value={selectedDate}\r\n              onChange={handleDateChange}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Row>\r\n        <List>\r\n          <ListItem>\r\n            <ListItemText primary=\"Pedidos recebidos\" />\r\n            <ListItemSecondaryAction>{count}</ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Total de pedidos\" />\r\n            <ListItemSecondaryAction>\r\n              {total.toLocaleString(\"pt-BR\", {\r\n                style: \"currency\",\r\n                currency: \"BRL\",\r\n              })}\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Ticket m√©dio\" />\r\n            <ListItemSecondaryAction>\r\n              {(total / count).toLocaleString(\"pt-BR\", {\r\n                style: \"currency\",\r\n                currency: \"BRL\",\r\n              })}\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        </List>\r\n      </AppContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatsPage;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Theme\\index.ts",[],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\404\\index.tsx",["167","168","169","170","171","172","173","174"],"import React from \"react\";\r\nimport {\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IconButton, AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { AppContent } from \"Theme\";\r\n\r\n// import { Container } from './styles';\r\n\r\nconst NotFoundPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { url, path, isExact, params } = useRouteMatch();\r\n  const {} = useParams();\r\n  const { search } = useLocation();\r\n  const searchParamValue = new URLSearchParams(search).get(\"searchParamName\");\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            style={{ paddingLeft: \"0px\" }}\r\n            onClick={() => history.goBack()}\r\n          >\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Notfound</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppContent>P√°gina n√£o encontrada</AppContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Onboarding\\index.tsx",["175","176","177","178","179","180","181","182","183"],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Onboarding\\CreateLink\\index.tsx",["184","185","186","187","188","189","190","191","192","193","194","195"],"import React, { useState, useEffect } from \"react\";\r\nimport { useGraphQL } from \"graphql-react\";\r\nimport {\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport urlSlug from \"url-slug\";\r\nimport {\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\r\nimport { AppContent, Row } from \"Theme\";\r\nimport { api } from \"Services/Api\";\r\nimport { fetchOptionsOverride } from \"Services/GraphqlRequest\";\r\nimport Loading from \"Components/Loading\";\r\nimport { JSDocNonNullableType } from \"typescript\";\r\n\r\n// import { Container } from './styles';\r\n\r\nconst CreateLinkPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { url, path, isExact, params } = useRouteMatch();\r\n  const {} = useParams();\r\n  const { search } = useLocation();\r\n  const searchParamValue = new URLSearchParams(search).get(\"searchParamName\");\r\n\r\n  const name = \"Dogueria e A√ßai\";\r\n\r\n  const [slug, setSlug] = useState<string | null>(urlSlug(\"\"));\r\n  const [slugErrorMessage, setSlugErrorMessage] = useState<string>(\"\");\r\n\r\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    setSlugErrorMessage(\"\");\r\n    setSlug(e.target.value);\r\n  }\r\n\r\n  const { loading, cacheValue } = useGraphQL<any, {}>({\r\n    operation: {\r\n      query: /* GraphQL */ `\r\n        query {\r\n          store {\r\n            name\r\n            alias\r\n          }\r\n        }\r\n      `,\r\n      variables: {},\r\n    },\r\n    fetchOptionsOverride: fetchOptionsOverride,\r\n    loadOnMount: true,\r\n    loadOnReload: true,\r\n    loadOnReset: false,\r\n  });\r\n\r\n  const { loading: saving, load: save } = useGraphQL<any, {}>({\r\n    operation: {\r\n      query: /* GraphQL */ `\r\n        mutation($alias: String) {\r\n          UpdateStore(alias: $alias) {\r\n            name\r\n            whatsapp\r\n          }\r\n        }\r\n      `,\r\n      variables: { alias: `menu.mindi.com.br/${urlSlug(slug)}` },\r\n    },\r\n    fetchOptionsOverride: fetchOptionsOverride,\r\n    loadOnMount: false,\r\n    loadOnReload: false,\r\n    loadOnReset: false,\r\n  });\r\n\r\n  async function validateAlias() {\r\n    setSlugErrorMessage(\"\");\r\n    try {\r\n      await api.get(`https://mindi-api-02.herokuapp.com/store/data`, {\r\n        headers: { url: `menu.mindi.com.br/${urlSlug(slug)}` },\r\n      });\r\n      setSlugErrorMessage(\"Essa url j√° est√° em uso. Tente outra, por favor.\");\r\n      return false;\r\n    } catch (err) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!!cacheValue) {\r\n      setSlug(urlSlug(cacheValue.data.store.name));\r\n    }\r\n  }, [cacheValue]);\r\n\r\n  function handleSave() {\r\n    validateAlias().then((isValid) => isValid && save());\r\n  }\r\n\r\n  //Ao carregar p√°gina verificar se slug sugerido √© v√°lido\r\n  //Se n√£o for v√°lido  mostrar mensagem: A url j√° existe em outro restaurante, por valor tente outro.\r\n  //\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            style={{ paddingLeft: \"0px\" }}\r\n            onClick={() => history.goBack()}\r\n          >\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Configura√ß√£o - Link</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppContent>\r\n        <Row>\r\n          <small>https://menu.mindi.com.br/</small>\r\n          <strong>{slug}</strong>\r\n        </Row>\r\n        <Row>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={10}>\r\n              <TextField\r\n                fullWidth\r\n                value={slug}\r\n                label=\"Personalize o seu link\"\r\n                variant=\"outlined\"\r\n                placeholder=\"digite aqui...\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Row>\r\n        {slugErrorMessage && (\r\n          <Row>\r\n            <span style={{ color: \"red\" }}>\r\n              Esse link personalizado j√° existe em outro restaurante, por favor\r\n              tente outro.\r\n            </span>\r\n          </Row>\r\n        )}\r\n        <Divider />\r\n        <Row>\r\n          <Button\r\n            onClick={handleSave}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Avan√ßar\r\n            <Loading show={saving} size=\"20px\" />\r\n          </Button>\r\n        </Row>\r\n        <Loading show={!cacheValue} />\r\n      </AppContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateLinkPage;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Onboarding\\ChooseProducts\\index.tsx",["196","197","198","199","200","201","202","203","204"],"import React from \"react\";\r\nimport {\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { AppContent, Row } from \"Theme\";\r\n\r\n// import { Container } from './styles';\r\n\r\nconst ChooseProductsPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { url, path, isExact, params } = useRouteMatch();\r\n  const {} = useParams();\r\n  const { search } = useLocation();\r\n  const searchParamValue = new URLSearchParams(search).get(\"searchParamName\");\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            style={{ paddingLeft: \"0px\" }}\r\n            onClick={() => history.goBack()}\r\n          >\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Configura√ß√£o - Produtos iniciais</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppContent>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <FormLabel component=\"legend\">Quais produtos voc√™ vende?</FormLabel>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={<Checkbox name=\"gilad\" />}\r\n              label=\"A√ßai\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox name=\"jason\" />}\r\n              label=\"Hamburguer\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox name=\"antoine\" />}\r\n              label=\"Pizza\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox name=\"antoine\" />}\r\n              label=\"Bebidas\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox name=\"antoine\" />}\r\n              label=\"Massa\"\r\n            />\r\n          </FormGroup>\r\n        </FormControl>\r\n        <Row>\r\n          <Button size=\"large\" variant=\"contained\" color=\"primary\">\r\n            Avan√ßar\r\n          </Button>\r\n        </Row>\r\n      </AppContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChooseProductsPage;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Onboarding\\Finish\\index.tsx",["205","206","207","208","209","210","211","212"],"import React from \"react\";\r\nimport {\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { AppContent, Row } from \"Theme\";\r\n\r\n// import { Container } from './styles';\r\n\r\nconst FinishPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { url, path, isExact, params } = useRouteMatch();\r\n  const {} = useParams();\r\n  const { search } = useLocation();\r\n  const searchParamValue = new URLSearchParams(search).get(\"searchParamName\");\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            style={{ paddingLeft: \"0px\" }}\r\n            onClick={() => history.goBack()}\r\n          >\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Configura√ß√£o - √öltimo passo</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppContent>\r\n        <Row horizontalCenter>\r\n          <Button variant=\"outlined\" color=\"primary\">\r\n            Ver Card√°pio\r\n          </Button>\r\n        </Row>\r\n        <Row horizontalCenter>\r\n          <Button variant=\"text\" color=\"primary\">\r\n            Salvar Atalho do App\r\n          </Button>\r\n        </Row>\r\n        {/* <Row horizontalCenter>\r\n          <Button variant=\"outlined\" color=\"primary\">\r\n            Oferta Exclusiva\r\n          </Button>\r\n        </Row> */}\r\n      </AppContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FinishPage;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Services\\Api\\index.ts",[],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Services\\GraphqlRequest\\index.ts",[],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Components\\Loading\\styles.ts",[],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Components\\Loading\\index.tsx",[],{"ruleId":"213","severity":1,"message":"214","line":2,"column":8,"nodeType":"215","messageId":"216","endLine":2,"endColumn":20},{"ruleId":"213","severity":1,"message":"217","line":12,"column":8,"nodeType":"215","messageId":"216","endLine":12,"endColumn":22},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"213","severity":1,"message":"222","line":14,"column":8,"nodeType":"215","messageId":"216","endLine":14,"endColumn":23},{"ruleId":"223","severity":1,"message":"224","line":37,"column":13,"nodeType":"225","endLine":37,"endColumn":122},{"ruleId":"213","severity":1,"message":"226","line":1,"column":38,"nodeType":"215","messageId":"216","endLine":1,"endColumn":49},{"ruleId":"213","severity":1,"message":"227","line":4,"column":23,"nodeType":"215","messageId":"216","endLine":4,"endColumn":34},{"ruleId":"213","severity":1,"message":"228","line":11,"column":3,"nodeType":"215","messageId":"216","endLine":11,"endColumn":12},{"ruleId":"213","severity":1,"message":"229","line":19,"column":8,"nodeType":"215","messageId":"216","endLine":19,"endColumn":17},{"ruleId":"213","severity":1,"message":"230","line":21,"column":10,"nodeType":"215","messageId":"216","endLine":21,"endColumn":18},{"ruleId":"213","severity":1,"message":"222","line":22,"column":8,"nodeType":"215","messageId":"216","endLine":22,"endColumn":23},{"ruleId":"213","severity":1,"message":"231","line":29,"column":10,"nodeType":"215","messageId":"216","endLine":29,"endColumn":21},{"ruleId":"213","severity":1,"message":"232","line":40,"column":9,"nodeType":"215","messageId":"216","endLine":40,"endColumn":17},{"ruleId":"213","severity":1,"message":"233","line":59,"column":9,"nodeType":"215","messageId":"216","endLine":59,"endColumn":22},{"ruleId":"213","severity":1,"message":"226","line":1,"column":38,"nodeType":"215","messageId":"216","endLine":1,"endColumn":49},{"ruleId":"213","severity":1,"message":"234","line":1,"column":51,"nodeType":"215","messageId":"216","endLine":1,"endColumn":57},{"ruleId":"213","severity":1,"message":"227","line":8,"column":23,"nodeType":"215","messageId":"216","endLine":8,"endColumn":34},{"ruleId":"213","severity":1,"message":"235","line":28,"column":10,"nodeType":"215","messageId":"216","endLine":28,"endColumn":13},{"ruleId":"213","severity":1,"message":"236","line":29,"column":10,"nodeType":"215","messageId":"216","endLine":29,"endColumn":26},{"ruleId":"213","severity":1,"message":"237","line":38,"column":11,"nodeType":"215","messageId":"216","endLine":38,"endColumn":14},{"ruleId":"213","severity":1,"message":"238","line":38,"column":16,"nodeType":"215","messageId":"216","endLine":38,"endColumn":20},{"ruleId":"213","severity":1,"message":"239","line":38,"column":22,"nodeType":"215","messageId":"216","endLine":38,"endColumn":29},{"ruleId":"213","severity":1,"message":"240","line":38,"column":31,"nodeType":"215","messageId":"216","endLine":38,"endColumn":37},{"ruleId":"213","severity":1,"message":"232","line":39,"column":9,"nodeType":"215","messageId":"216","endLine":39,"endColumn":17},{"ruleId":"241","severity":1,"message":"242","line":40,"column":9,"nodeType":"243","messageId":"244","endLine":40,"endColumn":11},{"ruleId":"213","severity":1,"message":"245","line":41,"column":11,"nodeType":"215","messageId":"216","endLine":41,"endColumn":17},{"ruleId":"213","severity":1,"message":"246","line":41,"column":19,"nodeType":"215","messageId":"216","endLine":41,"endColumn":27},{"ruleId":"213","severity":1,"message":"247","line":1,"column":17,"nodeType":"215","messageId":"216","endLine":1,"endColumn":25},{"ruleId":"213","severity":1,"message":"248","line":1,"column":27,"nodeType":"215","messageId":"216","endLine":1,"endColumn":36},{"ruleId":"213","severity":1,"message":"227","line":9,"column":23,"nodeType":"215","messageId":"216","endLine":9,"endColumn":34},{"ruleId":"213","severity":1,"message":"249","line":16,"column":3,"nodeType":"215","messageId":"216","endLine":16,"endColumn":11},{"ruleId":"213","severity":1,"message":"232","line":30,"column":9,"nodeType":"215","messageId":"216","endLine":30,"endColumn":17},{"ruleId":"213","severity":1,"message":"237","line":31,"column":11,"nodeType":"215","messageId":"216","endLine":31,"endColumn":14},{"ruleId":"213","severity":1,"message":"238","line":31,"column":16,"nodeType":"215","messageId":"216","endLine":31,"endColumn":20},{"ruleId":"213","severity":1,"message":"239","line":31,"column":22,"nodeType":"215","messageId":"216","endLine":31,"endColumn":29},{"ruleId":"213","severity":1,"message":"240","line":31,"column":31,"nodeType":"215","messageId":"216","endLine":31,"endColumn":37},{"ruleId":"241","severity":1,"message":"242","line":32,"column":9,"nodeType":"243","messageId":"244","endLine":32,"endColumn":11},{"ruleId":"213","severity":1,"message":"245","line":33,"column":11,"nodeType":"215","messageId":"216","endLine":33,"endColumn":17},{"ruleId":"213","severity":1,"message":"227","line":8,"column":23,"nodeType":"215","messageId":"216","endLine":8,"endColumn":34},{"ruleId":"213","severity":1,"message":"250","line":20,"column":9,"nodeType":"215","messageId":"216","endLine":20,"endColumn":16},{"ruleId":"213","severity":1,"message":"232","line":21,"column":9,"nodeType":"215","messageId":"216","endLine":21,"endColumn":17},{"ruleId":"213","severity":1,"message":"237","line":22,"column":11,"nodeType":"215","messageId":"216","endLine":22,"endColumn":14},{"ruleId":"213","severity":1,"message":"238","line":22,"column":16,"nodeType":"215","messageId":"216","endLine":22,"endColumn":20},{"ruleId":"213","severity":1,"message":"239","line":22,"column":22,"nodeType":"215","messageId":"216","endLine":22,"endColumn":29},{"ruleId":"213","severity":1,"message":"240","line":22,"column":31,"nodeType":"215","messageId":"216","endLine":22,"endColumn":37},{"ruleId":"241","severity":1,"message":"242","line":23,"column":9,"nodeType":"243","messageId":"244","endLine":23,"endColumn":11},{"ruleId":"213","severity":1,"message":"251","line":25,"column":9,"nodeType":"215","messageId":"216","endLine":25,"endColumn":25},{"ruleId":"218","replacedBy":"252"},{"ruleId":"220","replacedBy":"253"},{"ruleId":"213","severity":1,"message":"227","line":8,"column":23,"nodeType":"215","messageId":"216","endLine":8,"endColumn":34},{"ruleId":"213","severity":1,"message":"254","line":14,"column":3,"nodeType":"215","messageId":"216","endLine":14,"endColumn":9},{"ruleId":"213","severity":1,"message":"255","line":17,"column":3,"nodeType":"215","messageId":"216","endLine":17,"endColumn":17},{"ruleId":"213","severity":1,"message":"232","line":35,"column":9,"nodeType":"215","messageId":"216","endLine":35,"endColumn":17},{"ruleId":"213","severity":1,"message":"237","line":36,"column":11,"nodeType":"215","messageId":"216","endLine":36,"endColumn":14},{"ruleId":"213","severity":1,"message":"238","line":36,"column":16,"nodeType":"215","messageId":"216","endLine":36,"endColumn":20},{"ruleId":"213","severity":1,"message":"239","line":36,"column":22,"nodeType":"215","messageId":"216","endLine":36,"endColumn":29},{"ruleId":"213","severity":1,"message":"240","line":36,"column":31,"nodeType":"215","messageId":"216","endLine":36,"endColumn":37},{"ruleId":"241","severity":1,"message":"242","line":37,"column":9,"nodeType":"243","messageId":"244","endLine":37,"endColumn":11},{"ruleId":"213","severity":1,"message":"251","line":39,"column":9,"nodeType":"215","messageId":"216","endLine":39,"endColumn":25},{"ruleId":"213","severity":1,"message":"227","line":8,"column":23,"nodeType":"215","messageId":"216","endLine":8,"endColumn":34},{"ruleId":"213","severity":1,"message":"232","line":17,"column":9,"nodeType":"215","messageId":"216","endLine":17,"endColumn":17},{"ruleId":"213","severity":1,"message":"237","line":18,"column":11,"nodeType":"215","messageId":"216","endLine":18,"endColumn":14},{"ruleId":"213","severity":1,"message":"238","line":18,"column":16,"nodeType":"215","messageId":"216","endLine":18,"endColumn":20},{"ruleId":"213","severity":1,"message":"239","line":18,"column":22,"nodeType":"215","messageId":"216","endLine":18,"endColumn":29},{"ruleId":"213","severity":1,"message":"240","line":18,"column":31,"nodeType":"215","messageId":"216","endLine":18,"endColumn":37},{"ruleId":"241","severity":1,"message":"242","line":19,"column":9,"nodeType":"243","messageId":"244","endLine":19,"endColumn":11},{"ruleId":"213","severity":1,"message":"251","line":21,"column":9,"nodeType":"215","messageId":"216","endLine":21,"endColumn":25},{"ruleId":"213","severity":1,"message":"227","line":8,"column":23,"nodeType":"215","messageId":"216","endLine":8,"endColumn":34},{"ruleId":"213","severity":1,"message":"256","line":12,"column":8,"nodeType":"215","messageId":"216","endLine":12,"endColumn":22},{"ruleId":"213","severity":1,"message":"232","line":18,"column":9,"nodeType":"215","messageId":"216","endLine":18,"endColumn":17},{"ruleId":"213","severity":1,"message":"237","line":19,"column":11,"nodeType":"215","messageId":"216","endLine":19,"endColumn":14},{"ruleId":"213","severity":1,"message":"238","line":19,"column":16,"nodeType":"215","messageId":"216","endLine":19,"endColumn":20},{"ruleId":"213","severity":1,"message":"239","line":19,"column":22,"nodeType":"215","messageId":"216","endLine":19,"endColumn":29},{"ruleId":"213","severity":1,"message":"240","line":19,"column":31,"nodeType":"215","messageId":"216","endLine":19,"endColumn":37},{"ruleId":"241","severity":1,"message":"242","line":20,"column":9,"nodeType":"243","messageId":"244","endLine":20,"endColumn":11},{"ruleId":"213","severity":1,"message":"251","line":22,"column":9,"nodeType":"215","messageId":"216","endLine":22,"endColumn":25},{"ruleId":"213","severity":1,"message":"227","line":9,"column":23,"nodeType":"215","messageId":"216","endLine":9,"endColumn":34},{"ruleId":"213","severity":1,"message":"257","line":22,"column":8,"nodeType":"215","messageId":"216","endLine":22,"endColumn":21},{"ruleId":"213","severity":1,"message":"258","line":27,"column":10,"nodeType":"215","messageId":"216","endLine":27,"endColumn":30},{"ruleId":"213","severity":1,"message":"232","line":33,"column":9,"nodeType":"215","messageId":"216","endLine":33,"endColumn":17},{"ruleId":"213","severity":1,"message":"237","line":34,"column":11,"nodeType":"215","messageId":"216","endLine":34,"endColumn":14},{"ruleId":"213","severity":1,"message":"238","line":34,"column":16,"nodeType":"215","messageId":"216","endLine":34,"endColumn":20},{"ruleId":"213","severity":1,"message":"239","line":34,"column":22,"nodeType":"215","messageId":"216","endLine":34,"endColumn":29},{"ruleId":"213","severity":1,"message":"240","line":34,"column":31,"nodeType":"215","messageId":"216","endLine":34,"endColumn":37},{"ruleId":"241","severity":1,"message":"242","line":35,"column":9,"nodeType":"243","messageId":"244","endLine":35,"endColumn":11},{"ruleId":"213","severity":1,"message":"251","line":37,"column":9,"nodeType":"215","messageId":"216","endLine":37,"endColumn":25},{"ruleId":"213","severity":1,"message":"259","line":39,"column":9,"nodeType":"215","messageId":"216","endLine":39,"endColumn":13},{"ruleId":"213","severity":1,"message":"260","line":49,"column":11,"nodeType":"215","messageId":"216","endLine":49,"endColumn":18},{"ruleId":"213","severity":1,"message":"227","line":8,"column":23,"nodeType":"215","messageId":"216","endLine":8,"endColumn":34},{"ruleId":"213","severity":1,"message":"261","line":18,"column":3,"nodeType":"215","messageId":"216","endLine":18,"endColumn":17},{"ruleId":"213","severity":1,"message":"232","line":29,"column":9,"nodeType":"215","messageId":"216","endLine":29,"endColumn":17},{"ruleId":"213","severity":1,"message":"237","line":30,"column":11,"nodeType":"215","messageId":"216","endLine":30,"endColumn":14},{"ruleId":"213","severity":1,"message":"238","line":30,"column":16,"nodeType":"215","messageId":"216","endLine":30,"endColumn":20},{"ruleId":"213","severity":1,"message":"239","line":30,"column":22,"nodeType":"215","messageId":"216","endLine":30,"endColumn":29},{"ruleId":"213","severity":1,"message":"240","line":30,"column":31,"nodeType":"215","messageId":"216","endLine":30,"endColumn":37},{"ruleId":"241","severity":1,"message":"242","line":31,"column":9,"nodeType":"243","messageId":"244","endLine":31,"endColumn":11},{"ruleId":"213","severity":1,"message":"251","line":33,"column":9,"nodeType":"215","messageId":"216","endLine":33,"endColumn":25},{"ruleId":"213","severity":1,"message":"227","line":8,"column":23,"nodeType":"215","messageId":"216","endLine":8,"endColumn":34},{"ruleId":"213","severity":1,"message":"232","line":23,"column":9,"nodeType":"215","messageId":"216","endLine":23,"endColumn":17},{"ruleId":"213","severity":1,"message":"237","line":24,"column":11,"nodeType":"215","messageId":"216","endLine":24,"endColumn":14},{"ruleId":"213","severity":1,"message":"238","line":24,"column":16,"nodeType":"215","messageId":"216","endLine":24,"endColumn":20},{"ruleId":"213","severity":1,"message":"239","line":24,"column":22,"nodeType":"215","messageId":"216","endLine":24,"endColumn":29},{"ruleId":"213","severity":1,"message":"240","line":24,"column":31,"nodeType":"215","messageId":"216","endLine":24,"endColumn":37},{"ruleId":"241","severity":1,"message":"242","line":25,"column":9,"nodeType":"243","messageId":"244","endLine":25,"endColumn":11},{"ruleId":"213","severity":1,"message":"251","line":27,"column":9,"nodeType":"215","messageId":"216","endLine":27,"endColumn":25},"@typescript-eslint/no-unused-vars","'GraphqlReact' is defined but never used.","Identifier","unusedVar","'OnboardingPage' is defined but never used.","no-native-reassign",["262"],"no-negated-in-lhs",["263"],"'ChevronLeftIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useCallback' is defined but never used.","'useSelector' is defined but never used.","'Container' is defined but never used.","'SearchBar' is defined but never used.","'Gestures' is defined but never used.","'setInterval' is defined but never used.","'dispatch' is assigned a value but never used.","'handleGesture' is assigned a value but never used.","'useRef' is defined but never used.","'Tab' is defined but never used.","'queryAllByTestId' is defined but never used.","'url' is assigned a value but never used.","'path' is assigned a value but never used.","'isExact' is assigned a value but never used.","'params' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'search' is assigned a value but never used.","'pathname' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'ListItem' is defined but never used.","'history' is assigned a value but never used.","'searchParamValue' is assigned a value but never used.",["262"],["263"],"'Avatar' is defined but never used.","'ListItemAvatar' is defined but never used.","'CreateLinkPage' is defined but never used.","'ArrowLeftIcon' is defined but never used.","'JSDocNonNullableType' is defined but never used.","'name' is assigned a value but never used.","'loading' is assigned a value but never used.","'FormHelperText' is defined but never used.","no-global-assign","no-unsafe-negation"]