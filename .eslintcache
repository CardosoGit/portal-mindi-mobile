[{"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\App.tsx":"1","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Cardapio\\index.tsx":"2","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Category\\index.tsx":"3","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Onboarding\\ChooseProducts\\index.tsx":"4","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Stats\\index.tsx":"5","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\Products\\index.tsx":"6","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\PrintView\\styles.ts":"7","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Components\\Loading\\index.tsx":"8","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\PrintView\\PrintQuestion\\styles.ts":"9","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Orders\\index.tsx":"10","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Home\\index.tsx":"11","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\index.tsx":"12","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\OrdersToday\\index.tsx":"13","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\index.tsx":"14","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Store\\index.ts":"15","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Product\\index.tsx":"16","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Store\\reducers\\index.ts":"17","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Onboarding\\CreateLink\\index.tsx":"18","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\404\\index.tsx":"19","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Onboarding\\Finish\\index.tsx":"20","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Theme\\index.ts":"21","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\PrintView\\index.tsx":"22","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\Info\\index.tsx":"23","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Components\\Loading\\styles.ts":"24"},{"size":1912,"mtime":1607991580146,"results":"25","hashOfConfig":"26"},{"size":1674,"mtime":1606764672833,"results":"27","hashOfConfig":"26"},{"size":1627,"mtime":1606742976869,"results":"28","hashOfConfig":"26"},{"size":2357,"mtime":1606872084243,"results":"29","hashOfConfig":"26"},{"size":5462,"mtime":1614110791422,"results":"30","hashOfConfig":"26"},{"size":2191,"mtime":1606840176742,"results":"31","hashOfConfig":"26"},{"size":1001,"mtime":1607994537117,"results":"32","hashOfConfig":"26"},{"size":469,"mtime":1607388089051,"results":"33","hashOfConfig":"26"},{"size":206,"mtime":1607991318175,"results":"34","hashOfConfig":"26"},{"size":3690,"mtime":1613675824545,"results":"35","hashOfConfig":"26"},{"size":2648,"mtime":1613679436747,"results":"36","hashOfConfig":"26"},{"size":4462,"mtime":1613676362957,"results":"37","hashOfConfig":"26"},{"size":5411,"mtime":1613675318992,"results":"38","hashOfConfig":"26"},{"size":1329,"mtime":1606796853469,"results":"39","hashOfConfig":"26"},{"size":280,"mtime":1606712775124,"results":"40","hashOfConfig":"26"},{"size":1992,"mtime":1606711510788,"results":"41","hashOfConfig":"26"},{"size":81,"mtime":1606712750254,"results":"42","hashOfConfig":"26"},{"size":4652,"mtime":1608052442224,"results":"43","hashOfConfig":"26"},{"size":1211,"mtime":1606761296454,"results":"44","hashOfConfig":"26"},{"size":1710,"mtime":1606872608806,"results":"45","hashOfConfig":"26"},{"size":968,"mtime":1607993278193,"results":"46","hashOfConfig":"26"},{"size":4858,"mtime":1608069539084,"results":"47","hashOfConfig":"26"},{"size":4053,"mtime":1607996023101,"results":"48","hashOfConfig":"26"},{"size":462,"mtime":1607392934968,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1qvyo9j",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\App.tsx",["108","109"],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Cardapio\\index.tsx",["110"],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Category\\index.tsx",[],["111","112"],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Onboarding\\ChooseProducts\\index.tsx",["113","114","115","116","117","118","119","120","121"],"import React from \"react\";\r\nimport {\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { AppContent, Row } from \"Theme\";\r\n\r\n// import { Container } from './styles';\r\n\r\nconst ChooseProductsPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { url, path, isExact, params } = useRouteMatch();\r\n  const {} = useParams();\r\n  const { search } = useLocation();\r\n  const searchParamValue = new URLSearchParams(search).get(\"searchParamName\");\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            style={{ paddingLeft: \"0px\" }}\r\n            onClick={() => history.goBack()}\r\n          >\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Configuração - Produtos iniciais</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppContent>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <FormLabel component=\"legend\">Quais produtos você vende?</FormLabel>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={<Checkbox name=\"gilad\" />}\r\n              label=\"Açai\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox name=\"jason\" />}\r\n              label=\"Hamburguer\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox name=\"antoine\" />}\r\n              label=\"Pizza\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox name=\"antoine\" />}\r\n              label=\"Bebidas\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox name=\"antoine\" />}\r\n              label=\"Massa\"\r\n            />\r\n          </FormGroup>\r\n        </FormControl>\r\n        <Row>\r\n          <Button size=\"large\" variant=\"contained\" color=\"primary\">\r\n            Avançar\r\n          </Button>\r\n        </Row>\r\n      </AppContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChooseProductsPage;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Stats\\index.tsx",["122","123","124","125","126","127","128","129","130","131","132"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { format, isToday } from \"date-fns\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport ptBrLocale from \"date-fns/locale/pt-BR\";\r\nimport useQueryString from \"use-query-string\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nimport { AppContent, Row } from \"Theme\";\r\nimport { api } from \"Services/Api\";\r\nimport { Order } from \"Types/Order\";\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction updateHistory(path: any) {\r\n  window.history.replaceState(null, document.title, path);\r\n}\r\n\r\nconst StatsPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { url, path, isExact, params } = useRouteMatch();\r\n  const {} = useParams();\r\n  const { search } = useLocation();\r\n  const searchParamValue = new URLSearchParams(search).get(\"searchParamName\");\r\n\r\n  const [query, setQuery] = useQueryString(window.location, updateHistory, {\r\n    parseBooleans: true,\r\n  });\r\n\r\n  const [selectedDate, handleDateChange] = React.useState<Date | null>(\r\n    query.date ? new Date(`${query.date}T00:00:00-03:00`) : new Date()\r\n  );\r\n\r\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\r\n\r\n  const [orders, setOrders] = useState<Order[]>([]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const date = format(selectedDate || new Date(), \"yyyy-MM-dd\");\r\n    setQuery({\r\n      date: date,\r\n    });\r\n\r\n    api\r\n      .get(`portal/orders?date=${date}`)\r\n      .then(({ data }) => {\r\n        setOrders(data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => alert(\"Erro ao buscar cardapio\"));\r\n  }, [selectedDate]);\r\n\r\n  function ehHoje(date: Date | null) {\r\n    return isToday(date as Date);\r\n  }\r\n\r\n  const count = orders.length;\r\n  const total = orders.reduce((acum, order) => acum + order.total, 0);\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton color=\"inherit\" onClick={() => history.goBack()}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Relatório</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <AppContent>\r\n        {isLoading && <Row horizontalCenter>Gerando Relatório...</Row>}\r\n        {isLoading === false && (\r\n          <>\r\n            <Row horizontalCenter>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ptBrLocale}>\r\n                <DatePicker\r\n                  disableFuture\r\n                  openTo=\"date\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  label=\"Escolha o dia\"\r\n                  views={[\"month\", \"date\"]}\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Row>\r\n            {ehHoje(selectedDate) === true && count === 0 && (\r\n              <Row horizontalCenter>Você ainda não recebeu pedidos hoje.</Row>\r\n            )}\r\n            {count === 0 && ehHoje(selectedDate) === false && (\r\n              <Row horizontalCenter>Você não recebeu pedidos neste dia.</Row>\r\n            )}\r\n\r\n            {count > 0 && (\r\n              <List>\r\n                <Paper elevation={3}>\r\n                  <ListItem\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/pedidos?date=${format(\r\n                          selectedDate as Date,\r\n                          \"yyyy-MM-dd\"\r\n                        )}`\r\n                      )\r\n                    }\r\n                  >\r\n                    <ListItemText\r\n                      primary={`Você recebeu ${count} pedidos`}\r\n                      secondary={\"Clique aqui para ver\"}\r\n                    />\r\n\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton color=\"primary\">\r\n                        <ChevronRightIcon />\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                </Paper>\r\n                <ListItem>\r\n                  <ListItemText primary=\"Faturamento\" />\r\n                  <ListItemSecondaryAction>\r\n                    {total.toLocaleString(\"pt-BR\", {\r\n                      style: \"currency\",\r\n                      currency: \"BRL\",\r\n                    })}\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText primary=\"Ticket médio\" />\r\n                  <ListItemSecondaryAction>\r\n                    {(total / count).toLocaleString(\"pt-BR\", {\r\n                      style: \"currency\",\r\n                      currency: \"BRL\",\r\n                    })}\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n              </List>\r\n            )}\r\n          </>\r\n        )}\r\n      </AppContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatsPage;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\Products\\index.tsx",["133","134","135","136","137","138","139","140","141"],"import React, { Fragment } from \"react\";\r\nimport {\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { View } from \"Theme\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { Order } from \"Types/Order\";\r\n\r\n// import { Container } from './styles';\r\n\r\ntype ProductViewType = {\r\n  data: Order;\r\n};\r\n\r\nconst ProductsView: React.FC<ProductViewType> = ({ data }) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { url, path, isExact, params } = useRouteMatch();\r\n  const {} = useParams();\r\n  const { search } = useLocation();\r\n  const searchParamValue = new URLSearchParams(search).get(\"searchParamName\");\r\n\r\n  return (\r\n    <View>\r\n      <List>\r\n        {data.itens.map((item) => (\r\n          <ListItem divider>\r\n            <ListItemText\r\n              primary={`${item.qtd}x ${\r\n                item.productDescription\r\n              } - ${item.price.toLocaleString(\"pt-BR\", {\r\n                style: \"currency\",\r\n                currency: \"BRL\",\r\n              })}`}\r\n              secondary={\r\n                <ul>\r\n                  {item.groups.map((group) =>\r\n                    group.map((group, idx) => {\r\n                      if (idx === 0) {\r\n                        return (\r\n                          <Fragment>\r\n                            <b style={{ marginLeft: \"-20px\" }}>\r\n                              {group.group}:\r\n                            </b>\r\n                            <li>{group.printDescription.trim()}</li>\r\n                          </Fragment>\r\n                        );\r\n                      } else {\r\n                        return <li>{group.printDescription}</li>;\r\n                      }\r\n                    })\r\n                  )}\r\n                  {item.note && (\r\n                    <b style={{ marginLeft: \"-20px\" }}>\r\n                      Observação: {item.note}\r\n                    </b>\r\n                  )}\r\n                </ul>\r\n              }\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ProductsView;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\PrintView\\styles.ts",[],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Components\\Loading\\index.tsx",[],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\PrintView\\PrintQuestion\\styles.ts",[],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Orders\\index.tsx",["142","143","144","145","146","147","148","149","150","151","152"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { format, differenceInSeconds } from \"date-fns\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useInterval from \"@use-it/interval\";\r\nimport {\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Container,\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n} from \"@material-ui/core\";\r\nimport SearchField from \"react-search-field\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport { api } from \"Services/Api\";\r\nimport { Order } from \"Types/Order\";\r\nimport { AppContent, Row } from \"Theme\";\r\nimport { setInterval } from \"timers\";\r\n\r\n// import { Container } from './styles';\r\n\r\nenum filterType {\r\n  new = 0,\r\n  confirmed = 1,\r\n}\r\n\r\nconst OrdersPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [orders, setOrders] = useState<Order[]>([]);\r\n  const [criteria, setCriteria] = useState<number>(filterType.new);\r\n  const [filterText, setFilterText] = useState<string>(\"\");\r\n\r\n  const { search } = useLocation();\r\n\r\n  const dateParam = new URLSearchParams(search).get(\"date\");\r\n\r\n  const onSearchChange = (event: string) => {\r\n    setFilterText(event);\r\n  };\r\n\r\n  const byName = (textToFilter: string) => (order: Order) => {\r\n    return (\r\n      order.identify.name.toLowerCase().search(textToFilter.toLowerCase()) !==\r\n      -1\r\n    );\r\n  };\r\n\r\n  const getOrders = async (): Promise<Order[]> => {\r\n    const today = new Date();\r\n    const date = dateParam || format(today, \"yyyy-MM-dd\");\r\n    const { data } = await api.get(`portal/orders?date=${date}`);\r\n    return data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrders()\r\n      .then((orders) => setOrders(orders))\r\n      .catch((err) => alert(\"Erro ao buscar Pedidos\"));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton color=\"inherit\" onClick={() => history.goBack()}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n          <Typography slot=\"start\" variant=\"h6\">\r\n            Pedidos\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <AppContent bottomPadding={true}>\r\n        <SearchField\r\n          onChange={onSearchChange}\r\n          placeholder={\"Pesquise por cliente...\"}\r\n        />\r\n        <List>\r\n          {orders\r\n            .filter(byName(filterText))\r\n            .sort((a, b) =>\r\n              differenceInSeconds(new Date(b.createdAt), new Date(a.createdAt))\r\n            )\r\n            .map((order) => (\r\n              <ListItem\r\n                style={{ cursor: \"pointer\" }}\r\n                key={order._id}\r\n                onClick={() => history.push(`/pedido?id=${order._id}`)}\r\n                divider\r\n              >\r\n                <ListItemText\r\n                  primary={order.identify.name}\r\n                  secondary={order.address?.number ? \"Entrega\" : \"Retirada\"}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    onClick={() => history.push(`/pedido?id=${order._id}`)}\r\n                  >\r\n                    <ChevronRightIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n        </List>\r\n        {orders.length === 0 && (\r\n          <Row horizontalCenter>Nenhum pedido recebido.</Row>\r\n        )}\r\n      </AppContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrdersPage;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Home\\index.tsx",["153","154","155","156","157","158","159","160","161","162"],"import React from \"react\";\r\nimport {\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nimport { AppContent } from \"Theme\";\r\n\r\n// import { Container } from './styles';\r\n\r\nconst HomePage: React.FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { url, path, isExact, params } = useRouteMatch();\r\n  const {} = useParams();\r\n  const { search } = useLocation();\r\n  const searchParamValue = new URLSearchParams(search).get(\"searchParamName\");\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={() => (window.location.href = window.location.origin)}\r\n          >\r\n            <HomeIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Gestor de Pedidos</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppContent>\r\n        <List>\r\n          <Paper elevation={3}>\r\n            <ListItem\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => history.push(`/pedidos-hoje`)}\r\n            >\r\n              <ListItemText\r\n                primary={\"Acompanhar pedidos\"}\r\n                secondary={\"Monitore os pedidos do dia\"}\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <IconButton color=\"primary\">\r\n                  <ChevronRightIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          </Paper>\r\n\r\n          <Paper style={{ marginTop: \"10px\" }} elevation={3}>\r\n            <ListItem\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => history.push(`/relatorio`)}\r\n            >\r\n              <ListItemText\r\n                primary={\"Relatórios\"}\r\n                secondary={\"Veja o que foi vendido nos outros dias\"}\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <IconButton color=\"primary\">\r\n                  <ChevronRightIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          </Paper>\r\n        </List>\r\n      </AppContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\index.tsx",["163","164","165","166","167","168","169","170","171","172","173","174","175"],"import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport {\r\n  useHistory,\r\n  useRouteMatch,\r\n  useParams,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n} from \"@material-ui/core\";\r\nimport { Gestures } from \"react-gesture-handler\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport PrintOutlinedIcon from \"@material-ui/icons/PrintOutlined\";\r\nimport ShoppingBasketOutlinedIcon from \"@material-ui/icons/ShoppingBasketOutlined\";\r\nimport useQueryString from \"use-query-string\";\r\n\r\nimport InfoView from \"./Info\";\r\nimport ProductsView from \"./Products\";\r\nimport { AppContent } from \"Theme\";\r\nimport { api } from \"Services/Api\";\r\nimport { Order } from \"Types/Order\";\r\nimport { Tab } from \"@material-ui/icons\";\r\nimport { queryAllByTestId } from \"@testing-library/react\";\r\nimport PrintViewView from \"./PrintView\";\r\nimport PrintView from \"./PrintView\";\r\n// import { Container } from './styles';\r\n\r\nfunction updateHistory(path: any) {\r\n  window.history.replaceState(null, document.title, path);\r\n}\r\n\r\nconst OrderPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const { url, path, isExact, params } = useRouteMatch();\r\n  const dispatch = useDispatch();\r\n  const {} = useParams();\r\n  const { search, pathname } = useLocation();\r\n  const [query, setQuery] = useQueryString(window.location, updateHistory, {\r\n    parseBooleans: true,\r\n  });\r\n\r\n  const printView = useRef<HTMLDivElement>(null);\r\n  const handlePrint = useReactToPrint({\r\n    content: () => printView.current,\r\n  });\r\n\r\n  const tab = Number(query.tab || 1);\r\n\r\n  const id = query.id;\r\n\r\n  const [order, setOrder] = useState<Order | null>(null);\r\n\r\n  const handleGesture = (event: HammerInput) => {\r\n    if (event.type === \"swiperight\") {\r\n      setQuery({\r\n        tab: \"1\",\r\n      });\r\n    } else {\r\n      setQuery({\r\n        tab: \"2\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"orders/\" + id)\r\n      .then(({ data }) => {\r\n        setOrder(data);\r\n      })\r\n      .catch((err) => alert(err));\r\n  }, [id]);\r\n\r\n  return (\r\n    <Gestures\r\n      recognizers={{\r\n        Swipe: {\r\n          events: {\r\n            swiperight: (event) => handleGesture(event),\r\n            swipeleft: (event) => handleGesture(event),\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton color=\"inherit\" onClick={() => history.goBack()}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Detalhes do Pedido</Typography>\r\n          <IconButton\r\n            onClick={handlePrint}\r\n            color=\"inherit\"\r\n            style={{ paddingLeft: \"0px\" }}\r\n            href=\"#\"\r\n          >\r\n            <PrintOutlinedIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppContent bottomPadding>\r\n        {!order && <div>buscando...</div>}\r\n        {order && tab === 1 && <InfoView data={order} />}\r\n        {order && tab === 2 && <ProductsView data={order} />}\r\n      </AppContent>\r\n      <AppBar position=\"fixed\" style={{ top: \"auto\", bottom: 0 }}>\r\n        <BottomNavigation\r\n          showLabels\r\n          value={tab - 1}\r\n          onChange={(event, newValue) => {\r\n            if (newValue === 0) {\r\n              setQuery({\r\n                tab: \"1\",\r\n              });\r\n            } else {\r\n              setQuery({\r\n                tab: \"2\",\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          <BottomNavigationAction\r\n            label=\"Informações\"\r\n            icon={<InfoOutlinedIcon />}\r\n          />\r\n          <BottomNavigationAction\r\n            label=\"Produtos\"\r\n            icon={<ShoppingBasketOutlinedIcon />}\r\n          />\r\n        </BottomNavigation>\r\n      </AppBar>\r\n      {/* <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          zIndex: 99999,\r\n          background: \"white\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {order && <PrintView order={order as Order} ref={printView} />}\r\n      </div> */}\r\n      {order && <PrintView order={order as Order} ref={printView} />}\r\n    </Gestures>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\OrdersToday\\index.tsx",["176","177","178","179","180","181","182","183","184","185","186"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { format, differenceInSeconds } from \"date-fns\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useInterval from \"@use-it/interval\";\r\nimport {\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Container,\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n} from \"@material-ui/core\";\r\nimport SearchBar from \"react-js-search\";\r\nimport SearchField from \"react-search-field\";\r\nimport { Gestures } from \"react-gesture-handler\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\nimport { api } from \"Services/Api\";\r\nimport { Order } from \"Types/Order\";\r\nimport { AppContent, Row } from \"Theme\";\r\nimport { setInterval } from \"timers\";\r\n\r\n// import { Container } from './styles';\r\n\r\nenum filterType {\r\n  new = 0,\r\n  confirmed = 1,\r\n}\r\n\r\nconst OrdersTodayPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [orders, setOrders] = useState<Order[]>([]);\r\n  const [criteria, setCriteria] = useState<number>(filterType.new);\r\n  const [filterText, setFilterText] = useState<string>(\"\");\r\n\r\n  const byStatus = (criteria: any) => (order: Order) => {\r\n    switch (criteria) {\r\n      case filterType.new:\r\n        return order.events[order.events.length - 1].event === \"created\";\r\n\r\n      case filterType.confirmed:\r\n        return order.events[order.events.length - 1].event !== \"created\";\r\n\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n\r\n  const handleGesture = (event: HammerInput) => {\r\n    if (event.type === \"swiperight\") {\r\n      setCriteria(filterType.new);\r\n    } else {\r\n      setCriteria(filterType.confirmed);\r\n    }\r\n  };\r\n\r\n  const onSearchChange = (event: string) => {\r\n    setFilterText(event);\r\n  };\r\n\r\n  const byName = (textToFilter: string) => (order: Order) => {\r\n    return (\r\n      order.identify.name.toLowerCase().search(textToFilter.toLowerCase()) !==\r\n      -1\r\n    );\r\n  };\r\n\r\n  const getOrders = async (): Promise<Order[]> => {\r\n    const today = new Date();\r\n    const { data } = await api.get(\r\n      `portal/orders?date=${format(today, \"yyyy-MM-dd\")}`\r\n    );\r\n    return data;\r\n  };\r\n\r\n  const playAlert = () => {\r\n    let src =\r\n      \"//s3.amazonaws.com/appforest_uf/f1598429253106x343351561325749800/apple_msg_tone.mp3\";\r\n\r\n    for (let x = 1; x <= 10; x++) {\r\n      setTimeout(() => {\r\n        let audio = new Audio(src);\r\n        audio.play();\r\n      }, 100 * x);\r\n    }\r\n  };\r\n\r\n  useInterval(() => {\r\n    getOrders()\r\n      .then((fetchedOrders) => {\r\n        if (fetchedOrders.length > orders.length) {\r\n          playAlert();\r\n        }\r\n        setOrders(fetchedOrders);\r\n      })\r\n      .catch((err) => alert(\"Erro ao buscar Pedidos\"));\r\n  }, 30000);\r\n\r\n  useEffect(() => {\r\n    getOrders()\r\n      .then((orders) => setOrders(orders))\r\n      .catch((err) => alert(\"Erro ao buscar Pedidos\"));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton color=\"inherit\" onClick={() => history.goBack()}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n          <Typography slot=\"start\" variant=\"h6\">\r\n            Acompanhando pedidos\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <AppContent bottomPadding={true}>\r\n        <SearchField\r\n          onChange={onSearchChange}\r\n          placeholder={\"Pesquise por cliente...\"}\r\n        />\r\n        <List>\r\n          {orders\r\n            .filter(byStatus(criteria))\r\n            .filter(byName(filterText))\r\n            .sort((a, b) =>\r\n              differenceInSeconds(new Date(b.createdAt), new Date(a.createdAt))\r\n            )\r\n            .map((order) => (\r\n              <ListItem\r\n                style={{ cursor: \"pointer\" }}\r\n                key={order._id}\r\n                onClick={() => history.push(`/pedido?id=${order._id}`)}\r\n                divider\r\n              >\r\n                <ListItemText\r\n                  primary={order.identify.name}\r\n                  secondary={order.address?.number ? \"Entrega\" : \"Retirada\"}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    onClick={() => history.push(`/pedido?id=${order._id}`)}\r\n                  >\r\n                    <ChevronRightIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n        </List>\r\n        {criteria === filterType.new &&\r\n          orders.filter(byStatus(criteria)).length === 0 && (\r\n            <Row horizontalCenter>Aguardando novos pedidos...</Row>\r\n          )}\r\n      </AppContent>\r\n      <AppBar position=\"fixed\" style={{ top: \"auto\", bottom: 0 }}>\r\n        <BottomNavigation\r\n          showLabels\r\n          value={criteria}\r\n          onChange={(event, newValue) => setCriteria(newValue)}\r\n        >\r\n          <BottomNavigationAction label=\"Novos\" />\r\n          <BottomNavigationAction label=\"Confirmados\" />\r\n        </BottomNavigation>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrdersTodayPage;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\index.tsx",[],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Store\\index.ts",[],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Product\\index.tsx",["187"],"import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Container,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { Row } from \"../../Theme\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import { Container } from './styles';\r\n\r\nconst ProductPage: React.FC = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            onClick={() => history.goBack()}\r\n            style={{ paddingLeft: \"0px\" }}\r\n            color=\"inherit\"\r\n          >\r\n            <ChevronLeftIcon style={{ fontSize: \"30px\" }} />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Pizza G</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container maxWidth=\"sm\">\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item xs={6}>\r\n            <img src=\"https://diariodorio.com/wp-content/uploads/2020/07/daleopizzaria_20200710_144435_0-1280x720.jpg\" />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Button size=\"small\" variant=\"contained\" color=\"primary\">\r\n              Trocar imagem\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Row>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Nome\"\r\n            variant=\"outlined\"\r\n            placeholder=\"digite aqui...\"\r\n          />\r\n        </Row>\r\n        <Row>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Detalhes\"\r\n            variant=\"outlined\"\r\n            placeholder=\"digite aqui...\"\r\n          />\r\n        </Row>\r\n        <Row>\r\n          <TextField label=\"Preço\" type=\"number\" variant=\"outlined\" />\r\n        </Row>\r\n        <Row>\r\n          <Button fullWidth variant=\"contained\" color=\"primary\">\r\n            Salvar\r\n          </Button>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Store\\reducers\\index.ts",[],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Onboarding\\CreateLink\\index.tsx",["188","189","190","191","192","193","194","195","196","197","198"],"import React, { useState, useEffect } from \"react\";\r\nimport { useGraphQL } from \"graphql-react\";\r\nimport {\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport urlSlug from \"url-slug\";\r\nimport {\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\r\nimport { AppContent, Row } from \"Theme\";\r\nimport { api } from \"Services/Api\";\r\nimport { fetchOptionsOverride } from \"Services/GraphqlRequest\";\r\nimport Loading from \"Components/Loading\";\r\n\r\n// import { Container } from './styles';\r\n\r\nconst CreateLinkPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { url, path, isExact, params } = useRouteMatch();\r\n  const {} = useParams();\r\n  const { search } = useLocation();\r\n  const searchParamValue = new URLSearchParams(search).get(\"searchParamName\");\r\n\r\n  const name = \"Dogueria e Açai\";\r\n\r\n  const [slug, setSlug] = useState<string | null>(urlSlug(\"\"));\r\n  const [slugErrorMessage, setSlugErrorMessage] = useState<string>(\"\");\r\n\r\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    setSlugErrorMessage(\"\");\r\n    setSlug(e.target.value);\r\n  }\r\n\r\n  const { loading, cacheValue } = useGraphQL<any, {}>({\r\n    operation: {\r\n      query: /* GraphQL */ `\r\n        query {\r\n          store {\r\n            name\r\n            alias\r\n          }\r\n        }\r\n      `,\r\n      variables: {},\r\n    },\r\n    fetchOptionsOverride: fetchOptionsOverride,\r\n    loadOnMount: true,\r\n    loadOnReload: true,\r\n    loadOnReset: false,\r\n  });\r\n\r\n  const { loading: saving, load: save } = useGraphQL<any, {}>({\r\n    operation: {\r\n      query: /* GraphQL */ `\r\n        mutation($alias: String) {\r\n          UpdateStore(alias: $alias) {\r\n            name\r\n            whatsapp\r\n          }\r\n        }\r\n      `,\r\n      variables: { alias: `menu.mindi.com.br/${urlSlug(slug)}` },\r\n    },\r\n    fetchOptionsOverride: fetchOptionsOverride,\r\n    loadOnMount: false,\r\n    loadOnReload: false,\r\n    loadOnReset: false,\r\n  });\r\n\r\n  async function validateAlias() {\r\n    setSlugErrorMessage(\"\");\r\n    try {\r\n      await api.get(`https://mindi-api-02.herokuapp.com/store/data`, {\r\n        headers: { url: `menu.mindi.com.br/${urlSlug(slug)}` },\r\n      });\r\n      setSlugErrorMessage(\"Essa url já está em uso. Tente outra, por favor.\");\r\n      return false;\r\n    } catch (err) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!!cacheValue) {\r\n      setSlug(urlSlug(cacheValue.data.store.name));\r\n    }\r\n  }, [cacheValue]);\r\n\r\n  function handleSave() {\r\n    validateAlias().then((isValid) => isValid && save());\r\n  }\r\n\r\n  //Ao carregar página verificar se slug sugerido é válido\r\n  //Se não for válido  mostrar mensagem: A url já existe em outro restaurante, por valor tente outro.\r\n  //\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            style={{ paddingLeft: \"0px\" }}\r\n            onClick={() => history.goBack()}\r\n          >\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Configuração - Link</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppContent>\r\n        <Row>\r\n          <small>https://menu.mindi.com.br/</small>\r\n          <strong>{slug}</strong>\r\n        </Row>\r\n        <Row>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={10}>\r\n              <TextField\r\n                fullWidth\r\n                value={slug}\r\n                label=\"Personalize o seu link\"\r\n                variant=\"outlined\"\r\n                placeholder=\"digite aqui...\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Row>\r\n        {slugErrorMessage && (\r\n          <Row>\r\n            <span style={{ color: \"red\" }}>\r\n              Esse link personalizado já existe em outro restaurante, por favor\r\n              tente outro.\r\n            </span>\r\n          </Row>\r\n        )}\r\n        <Divider />\r\n        <Row>\r\n          <Button\r\n            onClick={handleSave}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Avançar\r\n            <Loading show={saving} size=\"20px\" />\r\n          </Button>\r\n        </Row>\r\n        <Loading show={!cacheValue} />\r\n      </AppContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateLinkPage;\r\n","C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\404\\index.tsx",["199","200","201","202","203","204","205","206"],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Onboarding\\Finish\\index.tsx",["207","208","209","210","211","212","213","214"],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Theme\\index.ts",[],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\PrintView\\index.tsx",["215","216","217","218","219","220","221","222","223","224"],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Pages\\Order\\Info\\index.tsx",["225","226","227","228","229","230","231","232","233","234","235"],"C:\\Node Projects\\Mindi\\gestor-pedidos-mindi-mob\\src\\Components\\Loading\\styles.ts",[],{"ruleId":"236","severity":1,"message":"237","line":2,"column":8,"nodeType":"238","messageId":"239","endLine":2,"endColumn":20},{"ruleId":"236","severity":1,"message":"240","line":12,"column":8,"nodeType":"238","messageId":"239","endLine":12,"endColumn":22},{"ruleId":"236","severity":1,"message":"241","line":14,"column":8,"nodeType":"238","messageId":"239","endLine":14,"endColumn":23},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"236","severity":1,"message":"246","line":8,"column":23,"nodeType":"238","messageId":"239","endLine":8,"endColumn":34},{"ruleId":"236","severity":1,"message":"247","line":18,"column":3,"nodeType":"238","messageId":"239","endLine":18,"endColumn":17},{"ruleId":"236","severity":1,"message":"248","line":29,"column":9,"nodeType":"238","messageId":"239","endLine":29,"endColumn":17},{"ruleId":"236","severity":1,"message":"249","line":30,"column":11,"nodeType":"238","messageId":"239","endLine":30,"endColumn":14},{"ruleId":"236","severity":1,"message":"250","line":30,"column":16,"nodeType":"238","messageId":"239","endLine":30,"endColumn":20},{"ruleId":"236","severity":1,"message":"251","line":30,"column":22,"nodeType":"238","messageId":"239","endLine":30,"endColumn":29},{"ruleId":"236","severity":1,"message":"252","line":30,"column":31,"nodeType":"238","messageId":"239","endLine":30,"endColumn":37},{"ruleId":"253","severity":1,"message":"254","line":31,"column":9,"nodeType":"255","messageId":"256","endLine":31,"endColumn":11},{"ruleId":"236","severity":1,"message":"257","line":33,"column":9,"nodeType":"238","messageId":"239","endLine":33,"endColumn":25},{"ruleId":"236","severity":1,"message":"246","line":8,"column":23,"nodeType":"238","messageId":"239","endLine":8,"endColumn":34},{"ruleId":"236","severity":1,"message":"258","line":14,"column":3,"nodeType":"238","messageId":"239","endLine":14,"endColumn":9},{"ruleId":"236","severity":1,"message":"259","line":17,"column":3,"nodeType":"238","messageId":"239","endLine":17,"endColumn":17},{"ruleId":"236","severity":1,"message":"248","line":42,"column":9,"nodeType":"238","messageId":"239","endLine":42,"endColumn":17},{"ruleId":"236","severity":1,"message":"249","line":43,"column":11,"nodeType":"238","messageId":"239","endLine":43,"endColumn":14},{"ruleId":"236","severity":1,"message":"250","line":43,"column":16,"nodeType":"238","messageId":"239","endLine":43,"endColumn":20},{"ruleId":"236","severity":1,"message":"251","line":43,"column":22,"nodeType":"238","messageId":"239","endLine":43,"endColumn":29},{"ruleId":"236","severity":1,"message":"252","line":43,"column":31,"nodeType":"238","messageId":"239","endLine":43,"endColumn":37},{"ruleId":"253","severity":1,"message":"254","line":44,"column":9,"nodeType":"255","messageId":"256","endLine":44,"endColumn":11},{"ruleId":"236","severity":1,"message":"257","line":46,"column":9,"nodeType":"238","messageId":"239","endLine":46,"endColumn":25},{"ruleId":"260","severity":1,"message":"261","line":74,"column":6,"nodeType":"262","endLine":74,"endColumn":20,"suggestions":"263"},{"ruleId":"236","severity":1,"message":"246","line":8,"column":23,"nodeType":"238","messageId":"239","endLine":8,"endColumn":34},{"ruleId":"236","severity":1,"message":"264","line":20,"column":9,"nodeType":"238","messageId":"239","endLine":20,"endColumn":16},{"ruleId":"236","severity":1,"message":"248","line":21,"column":9,"nodeType":"238","messageId":"239","endLine":21,"endColumn":17},{"ruleId":"236","severity":1,"message":"249","line":22,"column":11,"nodeType":"238","messageId":"239","endLine":22,"endColumn":14},{"ruleId":"236","severity":1,"message":"250","line":22,"column":16,"nodeType":"238","messageId":"239","endLine":22,"endColumn":20},{"ruleId":"236","severity":1,"message":"251","line":22,"column":22,"nodeType":"238","messageId":"239","endLine":22,"endColumn":29},{"ruleId":"236","severity":1,"message":"252","line":22,"column":31,"nodeType":"238","messageId":"239","endLine":22,"endColumn":37},{"ruleId":"253","severity":1,"message":"254","line":23,"column":9,"nodeType":"255","messageId":"256","endLine":23,"endColumn":11},{"ruleId":"236","severity":1,"message":"257","line":25,"column":9,"nodeType":"238","messageId":"239","endLine":25,"endColumn":25},{"ruleId":"236","severity":1,"message":"265","line":1,"column":38,"nodeType":"238","messageId":"239","endLine":1,"endColumn":49},{"ruleId":"236","severity":1,"message":"246","line":4,"column":23,"nodeType":"238","messageId":"239","endLine":4,"endColumn":34},{"ruleId":"236","severity":1,"message":"266","line":5,"column":8,"nodeType":"238","messageId":"239","endLine":5,"endColumn":19},{"ruleId":"236","severity":1,"message":"267","line":11,"column":3,"nodeType":"238","messageId":"239","endLine":11,"endColumn":12},{"ruleId":"236","severity":1,"message":"268","line":16,"column":3,"nodeType":"238","messageId":"239","endLine":16,"endColumn":19},{"ruleId":"236","severity":1,"message":"269","line":17,"column":3,"nodeType":"238","messageId":"239","endLine":17,"endColumn":25},{"ruleId":"236","severity":1,"message":"270","line":25,"column":10,"nodeType":"238","messageId":"239","endLine":25,"endColumn":21},{"ruleId":"236","severity":1,"message":"248","line":36,"column":9,"nodeType":"238","messageId":"239","endLine":36,"endColumn":17},{"ruleId":"236","severity":1,"message":"271","line":39,"column":10,"nodeType":"238","messageId":"239","endLine":39,"endColumn":18},{"ruleId":"236","severity":1,"message":"272","line":39,"column":20,"nodeType":"238","messageId":"239","endLine":39,"endColumn":31},{"ruleId":"260","severity":1,"message":"273","line":68,"column":6,"nodeType":"262","endLine":68,"endColumn":8,"suggestions":"274"},{"ruleId":"236","severity":1,"message":"246","line":8,"column":23,"nodeType":"238","messageId":"239","endLine":8,"endColumn":34},{"ruleId":"236","severity":1,"message":"275","line":18,"column":3,"nodeType":"238","messageId":"239","endLine":18,"endColumn":10},{"ruleId":"236","severity":1,"message":"241","line":20,"column":8,"nodeType":"238","messageId":"239","endLine":20,"endColumn":23},{"ruleId":"236","severity":1,"message":"248","line":31,"column":9,"nodeType":"238","messageId":"239","endLine":31,"endColumn":17},{"ruleId":"236","severity":1,"message":"249","line":32,"column":11,"nodeType":"238","messageId":"239","endLine":32,"endColumn":14},{"ruleId":"236","severity":1,"message":"250","line":32,"column":16,"nodeType":"238","messageId":"239","endLine":32,"endColumn":20},{"ruleId":"236","severity":1,"message":"251","line":32,"column":22,"nodeType":"238","messageId":"239","endLine":32,"endColumn":29},{"ruleId":"236","severity":1,"message":"252","line":32,"column":31,"nodeType":"238","messageId":"239","endLine":32,"endColumn":37},{"ruleId":"253","severity":1,"message":"254","line":33,"column":9,"nodeType":"255","messageId":"256","endLine":33,"endColumn":11},{"ruleId":"236","severity":1,"message":"257","line":35,"column":9,"nodeType":"238","messageId":"239","endLine":35,"endColumn":25},{"ruleId":"236","severity":1,"message":"265","line":1,"column":38,"nodeType":"238","messageId":"239","endLine":1,"endColumn":49},{"ruleId":"236","severity":1,"message":"246","line":9,"column":23,"nodeType":"238","messageId":"239","endLine":9,"endColumn":34},{"ruleId":"236","severity":1,"message":"276","line":30,"column":10,"nodeType":"238","messageId":"239","endLine":30,"endColumn":13},{"ruleId":"236","severity":1,"message":"277","line":31,"column":10,"nodeType":"238","messageId":"239","endLine":31,"endColumn":26},{"ruleId":"236","severity":1,"message":"278","line":32,"column":8,"nodeType":"238","messageId":"239","endLine":32,"endColumn":21},{"ruleId":"236","severity":1,"message":"249","line":42,"column":11,"nodeType":"238","messageId":"239","endLine":42,"endColumn":14},{"ruleId":"236","severity":1,"message":"250","line":42,"column":16,"nodeType":"238","messageId":"239","endLine":42,"endColumn":20},{"ruleId":"236","severity":1,"message":"251","line":42,"column":22,"nodeType":"238","messageId":"239","endLine":42,"endColumn":29},{"ruleId":"236","severity":1,"message":"252","line":42,"column":31,"nodeType":"238","messageId":"239","endLine":42,"endColumn":37},{"ruleId":"236","severity":1,"message":"248","line":43,"column":9,"nodeType":"238","messageId":"239","endLine":43,"endColumn":17},{"ruleId":"253","severity":1,"message":"254","line":44,"column":9,"nodeType":"255","messageId":"256","endLine":44,"endColumn":11},{"ruleId":"236","severity":1,"message":"279","line":45,"column":11,"nodeType":"238","messageId":"239","endLine":45,"endColumn":17},{"ruleId":"236","severity":1,"message":"280","line":45,"column":19,"nodeType":"238","messageId":"239","endLine":45,"endColumn":27},{"ruleId":"236","severity":1,"message":"265","line":1,"column":38,"nodeType":"238","messageId":"239","endLine":1,"endColumn":49},{"ruleId":"236","severity":1,"message":"281","line":2,"column":22,"nodeType":"238","messageId":"239","endLine":2,"endColumn":33},{"ruleId":"236","severity":1,"message":"246","line":4,"column":23,"nodeType":"238","messageId":"239","endLine":4,"endColumn":34},{"ruleId":"236","severity":1,"message":"267","line":11,"column":3,"nodeType":"238","messageId":"239","endLine":11,"endColumn":12},{"ruleId":"236","severity":1,"message":"282","line":19,"column":8,"nodeType":"238","messageId":"239","endLine":19,"endColumn":17},{"ruleId":"236","severity":1,"message":"283","line":21,"column":10,"nodeType":"238","messageId":"239","endLine":21,"endColumn":18},{"ruleId":"236","severity":1,"message":"284","line":24,"column":8,"nodeType":"238","messageId":"239","endLine":24,"endColumn":16},{"ruleId":"236","severity":1,"message":"285","line":25,"column":8,"nodeType":"238","messageId":"239","endLine":25,"endColumn":20},{"ruleId":"236","severity":1,"message":"270","line":29,"column":10,"nodeType":"238","messageId":"239","endLine":29,"endColumn":21},{"ruleId":"236","severity":1,"message":"248","line":40,"column":9,"nodeType":"238","messageId":"239","endLine":40,"endColumn":17},{"ruleId":"236","severity":1,"message":"286","line":59,"column":9,"nodeType":"238","messageId":"239","endLine":59,"endColumn":22},{"ruleId":"287","severity":1,"message":"288","line":37,"column":13,"nodeType":"289","endLine":37,"endColumn":122},{"ruleId":"236","severity":1,"message":"246","line":9,"column":23,"nodeType":"238","messageId":"239","endLine":9,"endColumn":34},{"ruleId":"236","severity":1,"message":"290","line":22,"column":8,"nodeType":"238","messageId":"239","endLine":22,"endColumn":21},{"ruleId":"236","severity":1,"message":"248","line":32,"column":9,"nodeType":"238","messageId":"239","endLine":32,"endColumn":17},{"ruleId":"236","severity":1,"message":"249","line":33,"column":11,"nodeType":"238","messageId":"239","endLine":33,"endColumn":14},{"ruleId":"236","severity":1,"message":"250","line":33,"column":16,"nodeType":"238","messageId":"239","endLine":33,"endColumn":20},{"ruleId":"236","severity":1,"message":"251","line":33,"column":22,"nodeType":"238","messageId":"239","endLine":33,"endColumn":29},{"ruleId":"236","severity":1,"message":"252","line":33,"column":31,"nodeType":"238","messageId":"239","endLine":33,"endColumn":37},{"ruleId":"253","severity":1,"message":"254","line":34,"column":9,"nodeType":"255","messageId":"256","endLine":34,"endColumn":11},{"ruleId":"236","severity":1,"message":"257","line":36,"column":9,"nodeType":"238","messageId":"239","endLine":36,"endColumn":25},{"ruleId":"236","severity":1,"message":"291","line":38,"column":9,"nodeType":"238","messageId":"239","endLine":38,"endColumn":13},{"ruleId":"236","severity":1,"message":"292","line":48,"column":11,"nodeType":"238","messageId":"239","endLine":48,"endColumn":18},{"ruleId":"236","severity":1,"message":"246","line":8,"column":23,"nodeType":"238","messageId":"239","endLine":8,"endColumn":34},{"ruleId":"236","severity":1,"message":"248","line":17,"column":9,"nodeType":"238","messageId":"239","endLine":17,"endColumn":17},{"ruleId":"236","severity":1,"message":"249","line":18,"column":11,"nodeType":"238","messageId":"239","endLine":18,"endColumn":14},{"ruleId":"236","severity":1,"message":"250","line":18,"column":16,"nodeType":"238","messageId":"239","endLine":18,"endColumn":20},{"ruleId":"236","severity":1,"message":"251","line":18,"column":22,"nodeType":"238","messageId":"239","endLine":18,"endColumn":29},{"ruleId":"236","severity":1,"message":"252","line":18,"column":31,"nodeType":"238","messageId":"239","endLine":18,"endColumn":37},{"ruleId":"253","severity":1,"message":"254","line":19,"column":9,"nodeType":"255","messageId":"256","endLine":19,"endColumn":11},{"ruleId":"236","severity":1,"message":"257","line":21,"column":9,"nodeType":"238","messageId":"239","endLine":21,"endColumn":25},{"ruleId":"236","severity":1,"message":"246","line":8,"column":23,"nodeType":"238","messageId":"239","endLine":8,"endColumn":34},{"ruleId":"236","severity":1,"message":"248","line":23,"column":9,"nodeType":"238","messageId":"239","endLine":23,"endColumn":17},{"ruleId":"236","severity":1,"message":"249","line":24,"column":11,"nodeType":"238","messageId":"239","endLine":24,"endColumn":14},{"ruleId":"236","severity":1,"message":"250","line":24,"column":16,"nodeType":"238","messageId":"239","endLine":24,"endColumn":20},{"ruleId":"236","severity":1,"message":"251","line":24,"column":22,"nodeType":"238","messageId":"239","endLine":24,"endColumn":29},{"ruleId":"236","severity":1,"message":"252","line":24,"column":31,"nodeType":"238","messageId":"239","endLine":24,"endColumn":37},{"ruleId":"253","severity":1,"message":"254","line":25,"column":9,"nodeType":"255","messageId":"256","endLine":25,"endColumn":11},{"ruleId":"236","severity":1,"message":"257","line":27,"column":9,"nodeType":"238","messageId":"239","endLine":27,"endColumn":25},{"ruleId":"236","severity":1,"message":"246","line":9,"column":23,"nodeType":"238","messageId":"239","endLine":9,"endColumn":34},{"ruleId":"236","severity":1,"message":"293","line":15,"column":10,"nodeType":"238","messageId":"239","endLine":15,"endColumn":20},{"ruleId":"236","severity":1,"message":"264","line":47,"column":11,"nodeType":"238","messageId":"239","endLine":47,"endColumn":18},{"ruleId":"236","severity":1,"message":"248","line":48,"column":11,"nodeType":"238","messageId":"239","endLine":48,"endColumn":19},{"ruleId":"236","severity":1,"message":"249","line":49,"column":13,"nodeType":"238","messageId":"239","endLine":49,"endColumn":16},{"ruleId":"236","severity":1,"message":"250","line":49,"column":18,"nodeType":"238","messageId":"239","endLine":49,"endColumn":22},{"ruleId":"236","severity":1,"message":"251","line":49,"column":24,"nodeType":"238","messageId":"239","endLine":49,"endColumn":31},{"ruleId":"236","severity":1,"message":"252","line":49,"column":33,"nodeType":"238","messageId":"239","endLine":49,"endColumn":39},{"ruleId":"253","severity":1,"message":"254","line":50,"column":11,"nodeType":"255","messageId":"256","endLine":50,"endColumn":13},{"ruleId":"236","severity":1,"message":"257","line":52,"column":11,"nodeType":"238","messageId":"239","endLine":52,"endColumn":27},{"ruleId":"236","severity":1,"message":"294","line":1,"column":17,"nodeType":"238","messageId":"239","endLine":1,"endColumn":25},{"ruleId":"236","severity":1,"message":"295","line":1,"column":27,"nodeType":"238","messageId":"239","endLine":1,"endColumn":36},{"ruleId":"236","severity":1,"message":"246","line":9,"column":23,"nodeType":"238","messageId":"239","endLine":9,"endColumn":34},{"ruleId":"236","severity":1,"message":"296","line":16,"column":3,"nodeType":"238","messageId":"239","endLine":16,"endColumn":11},{"ruleId":"236","severity":1,"message":"248","line":31,"column":9,"nodeType":"238","messageId":"239","endLine":31,"endColumn":17},{"ruleId":"236","severity":1,"message":"249","line":32,"column":11,"nodeType":"238","messageId":"239","endLine":32,"endColumn":14},{"ruleId":"236","severity":1,"message":"250","line":32,"column":16,"nodeType":"238","messageId":"239","endLine":32,"endColumn":20},{"ruleId":"236","severity":1,"message":"251","line":32,"column":22,"nodeType":"238","messageId":"239","endLine":32,"endColumn":29},{"ruleId":"236","severity":1,"message":"252","line":32,"column":31,"nodeType":"238","messageId":"239","endLine":32,"endColumn":37},{"ruleId":"253","severity":1,"message":"254","line":33,"column":9,"nodeType":"255","messageId":"256","endLine":33,"endColumn":11},{"ruleId":"236","severity":1,"message":"279","line":34,"column":11,"nodeType":"238","messageId":"239","endLine":34,"endColumn":17},"@typescript-eslint/no-unused-vars","'GraphqlReact' is defined but never used.","Identifier","unusedVar","'OnboardingPage' is defined but never used.","'ChevronLeftIcon' is defined but never used.","no-native-reassign",["297"],"no-negated-in-lhs",["298"],"'useSelector' is defined but never used.","'FormHelperText' is defined but never used.","'dispatch' is assigned a value but never used.","'url' is assigned a value but never used.","'path' is assigned a value but never used.","'isExact' is assigned a value but never used.","'params' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'searchParamValue' is assigned a value but never used.","'Avatar' is defined but never used.","'ListItemAvatar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setQuery'. Either include it or remove the dependency array.","ArrayExpression",["299"],"'history' is assigned a value but never used.","'useCallback' is defined but never used.","'useInterval' is defined but never used.","'Container' is defined but never used.","'BottomNavigation' is defined but never used.","'BottomNavigationAction' is defined but never used.","'setInterval' is defined but never used.","'criteria' is assigned a value but never used.","'setCriteria' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["300"],"'Divider' is defined but never used.","'Tab' is defined but never used.","'queryAllByTestId' is defined but never used.","'PrintViewView' is defined but never used.","'search' is assigned a value but never used.","'pathname' is assigned a value but never used.","'useLocation' is defined but never used.","'SearchBar' is defined but never used.","'Gestures' is defined but never used.","'HomeIcon' is defined but never used.","'BarChartIcon' is defined but never used.","'handleGesture' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ArrowLeftIcon' is defined but never used.","'name' is assigned a value but never used.","'loading' is assigned a value but never used.","'GroupSharp' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'ListItem' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},"Update the dependencies array to be: [selectedDate, setQuery]",{"range":"305","text":"306"},"Update the dependencies array to be: [getOrders]",{"range":"307","text":"308"},[2143,2157],"[selectedDate, setQuery]",[1982,1984],"[getOrders]"]